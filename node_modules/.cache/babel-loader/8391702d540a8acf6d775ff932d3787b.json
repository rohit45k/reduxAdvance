{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./uiSlice\";\nconst initialCartState = {\n  items: [],\n  badgeQty: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const item = action.payload;\n      const itemExists = state.items.find(i => i.id === item.id);\n\n      if (!itemExists) {\n        state.items.push({\n          id: item.id,\n          name: item.name,\n          quantity: 1,\n          price: item.price,\n          totalAmount: item.price\n        });\n      } else {\n        itemExists.quantity += 1;\n        itemExists.totalAmount += itemExists.price;\n      }\n\n      state.badgeQty += 1;\n      state.totalAmount += item.price;\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const itemExists = state.items.find(item => item.id === id);\n\n      if (!itemExists) {\n        return;\n      }\n\n      if (itemExists.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        itemExists.quantity -= 1;\n        itemExists.totalAmount -= itemExists.price;\n      }\n\n      state.badgeQty -= 1;\n      state.totalAmount -= itemExists.price;\n    },\n\n    replaceCart(state, action) {\n      state.items = action.payload.items;\n      state.badgeQty = action.payload.badgeQty;\n      state.totalAmount = action.payload.totalAmount;\n    },\n\n    clearCart(state) {\n      state = initialCartState;\n    }\n\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n\n    const sendData = async () => {\n      const response = await fetch(\"https://redux-store-97f56-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\", {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending data failed');\n      }\n    };\n\n    try {\n      await sendData();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Something went wrong'\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'Fetching...',\n      title: 'Fetching...',\n      message: 'Fetching cart data'\n    }));\n\n    const fetchCart = async () => {\n      const response = await fetch(\"https://redux-store-97f56-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\");\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchCart();\n      dispatch(cartActions.replaceCart(cartData));\n      dispatch(uiActions.showNotification({\n        status: 'Success',\n        title: 'Success',\n        message: 'Fetched cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Something went wrong'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","uiActions","initialCartState","items","badgeQty","totalAmount","cartSlice","name","initialState","reducers","addItemToCart","state","action","item","payload","itemExists","find","i","id","push","quantity","price","removeItemFromCart","filter","replaceCart","clearCart","sendCartData","cart","dispatch","showNotification","status","title","message","sendData","response","fetch","method","body","JSON","stringify","ok","Error","error","fetchCartData","fetchCart","data","json","cartData","cartActions","actions","reducer"],"sources":["C:/Users/Admin/Desktop/udemy/reduxAdvance/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./uiSlice\";\r\n\r\nconst initialCartState = {\r\n    items: [],\r\n    badgeQty: 0,\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const item = action.payload;\r\n\r\n            const itemExists = state.items.find(i => i.id === item.id);\r\n\r\n            if(!itemExists) {\r\n                state.items.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    quantity: 1,\r\n                    price: item.price,\r\n                    totalAmount: item.price\r\n                })\r\n            } else {\r\n                itemExists.quantity += 1\r\n                itemExists.totalAmount += itemExists.price\r\n            }\r\n\r\n            state.badgeQty += 1\r\n            state.totalAmount +=  item.price\r\n\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n\r\n            const itemExists = state.items.find(item => item.id === id);\r\n\r\n            if(!itemExists) {\r\n                return\r\n            }\r\n\r\n            if(itemExists.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                itemExists.quantity -= 1\r\n                itemExists.totalAmount -= itemExists.price\r\n            }\r\n\r\n            state.badgeQty -= 1\r\n            state.totalAmount -=  itemExists.price\r\n\r\n        },\r\n        replaceCart(state, action) {\r\n            state.items = action.payload.items;\r\n            state.badgeQty = action.payload.badgeQty;\r\n            state.totalAmount = action.payload.totalAmount\r\n        },\r\n        clearCart(state) {\r\n            state = initialCartState\r\n        },\r\n    }\r\n})\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async(dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data'\r\n          }))\r\n\r\n        const sendData = async() => {\r\n            const response = await fetch(\"https://redux-store-97f56-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\", {\r\n                method: 'PUT',\r\n                body: JSON.stringify(cart)\r\n            })\r\n\r\n            if(!response.ok) {\r\n                throw new Error('Sending data failed')\r\n            }\r\n        }\r\n\r\n        try {\r\n            await sendData()\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success',\r\n                message: 'Sent cart data successfully'\r\n              }))\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Something went wrong'\r\n              }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchCartData = () => {\r\n    return async(dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'Fetching...',\r\n            title: 'Fetching...',\r\n            message: 'Fetching cart data'\r\n          }))\r\n\r\n          const fetchCart = async() => {\r\n            const response = await fetch(\"https://redux-store-97f56-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\")\r\n\r\n            if(!response.ok) {\r\n                throw new Error('Something went wrong')\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n          }\r\n\r\n          try {\r\n            const cartData = await fetchCart();\r\n            dispatch(cartActions.replaceCart(cartData));\r\n            dispatch(uiActions.showNotification({\r\n                status: 'Success',\r\n                title: 'Success',\r\n                message: 'Fetched cart data successfully'\r\n              }))\r\n          } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Something went wrong'\r\n              }))\r\n          }\r\n    }\r\n}\r\n\r\nexport const cartActions = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}